<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[如何学习一门新技术]]></title>
      <url>http://yoursite.com/2016/08/05/how-to-study-new-technology/</url>
      <content type="html"><![CDATA[<p><img src="http://blog.wublogpush.com/hello-world-developer.png" alt="coding"></p>
<h1 id="两个先决条件"><a href="#两个先决条件" class="headerlink" title="两个先决条件"></a>两个先决条件</h1><h2 id="跳出舒适区"><a href="#跳出舒适区" class="headerlink" title="跳出舒适区"></a>跳出舒适区</h2><p>思想要主动求变，敢于跳出的自己的舒适区，对任何技术都抱有开放的心态。<br>程序员至少要做到两点，不要对自己不了解的技术心存偏见，不要对自己不熟悉的技术心存恐惧。</p>
<h2 id="主动学习"><a href="#主动学习" class="headerlink" title="主动学习"></a>主动学习</h2><p>要化被动式学习为主动式学习。<br>主动式学习需要你未雨绸缪，不能临时抱佛脚。而且要把学习看做是对自己的积累和提高，看成是对自己的长期投资，不能抱有太强的功利性。</p>
<a id="more"></a>
<h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><p><img src="http://blog.wublogpush.com/hello_world_how_to_learn.png" alt="how to learn new technology"></p>
<h1 id="五个步骤"><a href="#五个步骤" class="headerlink" title="五个步骤"></a>五个步骤</h1><h2 id="What-amp-Why"><a href="#What-amp-Why" class="headerlink" title="What &amp; Why"></a>What &amp; Why</h2><p>学习一门新技术前，首先需要了解新技术的背景，解决什么问题，同类技术有哪些，为何出现，我们为何要学习它，没有它之前我们如何工作，有了它以后我们如何工作。<br>这样能够迅速建立起对该技术的宏观认识，了解其潜在的应用场景以及一些局限性。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p>接下来就要实际使用一下该技术的核心功能，强化对它的认识。<br>通常的方式是参考该技术官网的Quick Start章节，一步一步来。</p>
<h2 id="读官方文档-amp-实践"><a href="#读官方文档-amp-实践" class="headerlink" title="读官方文档 &amp; 实践"></a>读官方文档 &amp; 实践</h2><p>前两步能保证你对一门技术的入门，那么如何进阶呢？<br>读官方文档。<br>从官网上把该技术的详细文档扒拉下来，使劲读吧。通读这些文档能让你进入它的实现细节，以及各种使用方式与场景，甚至一些最佳实践。<br>一门技术最好的文档必须是它的官方文档。(如果不是，那么这门技术火不了。)<br>同时，需注重实践。<br>通读文档的过程中一定要在项目加以运用。<br>如果在项目中没实践机会，自己可以写一些小的demo来实践，学习一些开源项目。<br>学习知识时实践与理论相结合的道理恒古不变。</p>
<h2 id="教是最好的老师"><a href="#教是最好的老师" class="headerlink" title="教是最好的老师"></a>教是最好的老师</h2><p>把你所学、所想讲出来，写出来，暴露在公众之下，接受批判，从而发现自己的不足，促使你进步。<br>比如：可以写写博客、做演讲，到StackOverFlow、SegmentFault（国内）等回答相关的问题。</p>
<h2 id="继续深入"><a href="#继续深入" class="headerlink" title="继续深入"></a>继续深入</h2><p>加入技术社区，进一步发挥自己影响力。翻译、编写与该技术相关的书籍。如果该技术开源，自己可以contribute成为开发者中的一员。这就是质的飞跃，从使用工具进阶到创造工具。</p>
<p>你只要完成前三步，你就比50%的程序员牛了，完成第四步，你已经站在90%程序员的前面。走完5步，你已经不是仅仅掌握这门技术了，你已经超神了!</p>
<h1 id="快速小结"><a href="#快速小结" class="headerlink" title="快速小结"></a>快速小结</h1><p>重要的事情说三遍。</p>
<ol>
<li>主动学习很重要，主动学习很重要，主动学习很重要。</li>
<li>官方文档很重要，官方文档很重要，官方文档很重要。</li>
<li>实践很重要，实践很重要，实践很重要。</li>
</ol>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>本部分整理自以下两篇文章。</p>
<ol>
<li><a href="http://www.seabornlee.cn/post/bian-cheng/how-to-study-new-technology" target="_blank" rel="external">怎样快速学习一门新技术</a></li>
<li><a href="https://codingstyle.cn/topics/50" target="_blank" rel="external">如何快速掌握一门新技术／语言／框架</a></li>
</ol>
<h1 id="延伸阅读"><a href="#延伸阅读" class="headerlink" title="延伸阅读"></a>延伸阅读</h1><p>第一篇是别人实战这个学习方法的例子，值得一看。<br>第二篇是参考资料都来自这个社区，无意中看到这篇社区置顶公告，觉得挺有意思，故分享至此。</p>
<ol>
<li><a href="http://code.youmeek.com/2016/03/07/2016/02/My-Learning-Way/" target="_blank" rel="external">我的学习、归纳方法（以学习 Maven 为例） by Judas.n</a></li>
<li><a href="https://codingstyle.cn/topics/10" target="_blank" rel="external">「必读」这是一个什么样的社区？ by hkliya</a></li>
</ol>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这篇文章几乎完全是整理自别人的博客，我也没有达到这个高度能教导别人怎么去学习一门新技术。<br>整理于此，是让自己能更熟悉这个学习的方法论，自己以后学习新技术也有一个参照。<br>当然，学习方法不能生搬硬套拿来就用。<br>所以，以后我会根据自己的实际学习经验不断的来迭代这篇文章，形成自己的方法论。</p>
<blockquote>
<p>2016.08.05 Version 1.0</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/08/03/hello-world/</url>
      <content type="html"><![CDATA[<p>学习其实只不过是一种生活方式，否则为什么会有的人就是停不下来？学习不需要坚持、不需要毅力、不需要信念，不需要各种“不得已而为之的概念”，它只不过是一种选择，一个一旦真选了就再也不可逆的选择。仅此而已。</p>
<pre><code>while(alive){
    learn();
}
</code></pre>]]></content>
    </entry>
    
  
  
</search>
